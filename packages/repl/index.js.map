{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import repl = require(\"repl\")\r\nimport util = require(\"util\")\r\n\r\nclass REPLProvider<C> {\r\n\tpublic repl: repl.REPLServer\r\n\r\n\tpublic constructor(public context: C) {\r\n\t\tconst cli = repl.start({ prompt: \"\", eval: this.customEval, writer: s => s })\r\n\t\tObject.assign(cli.context, context)\r\n\t\tthis.repl = cli\r\n\t}\r\n\r\n\tprivate async customEval(input: string, _context: import(\"vm\").Context, _filename: string, callback: (err: Error | null, result: unknown) => unknown): Promise<void> {\r\n\t\tlet depth = 0\r\n\r\n\t\tif (input === \"exit\\n\") return process.exit()\r\n\r\n\t\tif (input.startsWith(\":\")) {\r\n\t\t\tconst depthOverwrite = input.split(\" \")[0]\r\n\t\t\tdepth = +depthOverwrite.slice(1)\r\n\t\t\tinput = input.slice(depthOverwrite.length + 1)\r\n\t\t}\r\n\r\n\t\tlet result: unknown\r\n\t\ttry {\r\n\t\t\tresult = await eval(input)\r\n\t\t\tconst output = util.inspect(result, false, depth, true)\r\n\t\t\treturn void callback(null, output)\r\n\t\t} catch (e) {\r\n\t\t\treturn void callback(null, util.inspect(e, true, 100, true))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = REPLProvider\r\n"],"mappings":"+EAAA,IAAO,KAAO,QAAQ,QACf,KAAO,QAAQ,QAEhB,aAAN,KAAsB,CAGd,YAAmBA,EAAY,CAAZ,aAAAA,EACzB,IAAMC,EAAM,KAAK,MAAM,CAAE,OAAQ,GAAI,KAAM,KAAK,WAAY,OAAQC,EAAAC,GAAKA,EAAL,SAAO,CAAC,EAC5E,OAAO,OAAOF,EAAI,QAASD,CAAO,EAClC,KAAK,KAAOC,CACb,CAVD,MAGsB,CAAAC,EAAA,qBACd,KAQP,MAAc,WAAW,MAAe,SAAgC,UAAmB,SAA0E,CACpK,IAAI,MAAQ,EAEZ,GAAI,QAAU;AAAA,EAAU,OAAO,QAAQ,KAAK,EAE5C,GAAI,MAAM,WAAW,GAAG,EAAG,CAC1B,IAAME,EAAiB,MAAM,MAAM,GAAG,EAAE,CAAC,EACzC,MAAQ,CAACA,EAAe,MAAM,CAAC,EAC/B,MAAQ,MAAM,MAAMA,EAAe,OAAS,CAAC,CAC9C,CAEA,IAAI,OACJ,GAAI,CACH,OAAS,MAAM,KAAK,KAAK,EACzB,IAAM,OAAS,KAAK,QAAQ,OAAQ,GAAO,MAAO,EAAI,EACtD,OAAO,KAAK,SAAS,KAAM,MAAM,CAClC,OAASC,EAAG,CACX,OAAO,KAAK,SAAS,KAAM,KAAK,QAAQA,EAAG,GAAM,IAAK,EAAI,CAAC,CAC5D,CACD,CACD,EAEA,eAAS","names":["context","cli","__name","s","depthOverwrite","e"]}